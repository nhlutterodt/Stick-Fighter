{"version":3,"file":"index-25fb385f.js","sources":["../src/ui/controlsInfo.js","../src/ui/healthBar.js","../src/ui/menu.js","../src/ui/messageDisplay.js","../src/ui/debugPanel.js","../src/game/gameLoop.js","../src/index.js"],"sourcesContent":["// controlsInfo.js - Modular, event-driven controls info UI for Stick Fighter\n// Author: Modernized for ES module, accessibility, and advanced UI/UX\n\nimport { getKeyBindings } from '../game/controls.js';\nimport { eventManager } from '../game/eventManager.js';\nimport { onScreenStateChange } from './screenManager.js';\n\nlet container = null;\nlet tooltip = null;\nlet closeBtn = null;\n\nconst ACTION_LABELS = {\n  left: 'Move Left',\n  right: 'Move Right',\n  jump: 'Jump',\n  punch: 'Punch',\n  kick: 'Kick',\n  guard: 'Guard',\n  slam: 'Slam',\n  airDodge: 'Air Dodge',\n  parry: 'Parry',\n  run: 'Run',\n  turn: 'Turn'\n};\n\nfunction createTooltip() {\n  if (tooltip) return;\n  tooltip = document.createElement('div');\n  tooltip.className = 'tooltip';\n  document.body.appendChild(tooltip);\n}\n\nfunction showTooltip(text, target) {\n  try {\n    if (!tooltip) createTooltip();\n    tooltip.textContent = text;\n    tooltip.classList.add('visible');\n    const rect = target.getBoundingClientRect();\n    // Responsive positioning\n    let left = rect.left + rect.width / 2;\n    let top = rect.bottom + 8;\n    // Prevent overflow\n    const tooltipRect = tooltip.getBoundingClientRect();\n    if (left + tooltipRect.width / 2 > window.innerWidth) left = window.innerWidth - tooltipRect.width / 2 - 8;\n    if (left - tooltipRect.width / 2 < 0) left = tooltipRect.width / 2 + 8;\n    if (top + tooltipRect.height > window.innerHeight) top = rect.top - tooltipRect.height - 8;\n    tooltip.style.left = `${left}px`;\n    tooltip.style.top = `${top}px`;\n  } catch (e) {\n    console.warn('[controlsInfo] Tooltip error:', e);\n  }\n}\n\nfunction hideTooltip() {\n  if (tooltip) tooltip.classList.remove('visible');\n}\n\nfunction handleKeyNav(e) {\n  if (!container) return;\n  const keys = Array.from(container.querySelectorAll('.control-key'));\n  const current = document.activeElement;\n  const idx = keys.indexOf(current);\n  if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n    if (idx !== -1) keys[(idx + 1) % keys.length].focus();\n    e.preventDefault();\n  } else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n    if (idx !== -1) keys[(idx - 1 + keys.length) % keys.length].focus();\n    e.preventDefault();\n  } else if (e.key === 'Escape') {\n    hideControlsInfo();\n    e.preventDefault();\n  }\n}\n\nfunction createCloseButton() {\n  if (closeBtn) return closeBtn;\n  closeBtn = document.createElement('button');\n  closeBtn.className = 'controls-info-close';\n  closeBtn.setAttribute('aria-label', 'Close controls info');\n  closeBtn.innerHTML = '&times;';\n  closeBtn.style.position = 'absolute';\n  closeBtn.style.top = '8px';\n  closeBtn.style.right = '12px';\n  closeBtn.style.background = 'none';\n  closeBtn.style.border = 'none';\n  closeBtn.style.fontSize = '1.5em';\n  closeBtn.style.cursor = 'pointer';\n  closeBtn.style.color = 'var(--theme-accent-dark, #2563eb)';\n  closeBtn.addEventListener('click', hideControlsInfo);\n  return closeBtn;\n}\n\nfunction renderControlsInfo() {\n  try {\n    // Use the existing #controlsInfo div if present\n    let domContainer = document.getElementById('controlsInfo');\n    if (domContainer) {\n      container = domContainer;\n      container.className = 'controls-info';\n      container.setAttribute('tabindex', '0');\n      container.setAttribute('aria-label', 'Game Controls Information');\n      container.setAttribute('role', 'region');\n      container.style.position = 'relative';\n      container.style.opacity = '0';\n      container.style.transition = 'opacity 0.4s';\n      console.debug('[controlsInfo] Found #controlsInfo container in DOM.');\n    } else if (!container) {\n      container = document.createElement('section');\n      container.className = 'controls-info';\n      container.setAttribute('tabindex', '0');\n      container.setAttribute('aria-label', 'Game Controls Information');\n      container.setAttribute('role', 'region');\n      container.style.position = 'relative';\n      container.style.opacity = '0';\n      container.style.transition = 'opacity 0.4s';\n      document.body.appendChild(container);\n      console.debug('[controlsInfo] Created fallback controls-info container.');\n    }\n    const bindings = getKeyBindings();\n    if (!bindings?.player1 || !bindings?.player2) {\n      container.innerHTML = `<div style='color:#b91c1c'>Controls info unavailable: Key bindings missing.</div>`;\n      console.warn('[controlsInfo] Key bindings missing, cannot render controls info.');\n      return;\n    }\n    container.innerHTML = `\n      <h3>Controls</h3>\n      <div style=\"display: flex; gap: 32px; flex-wrap: wrap; justify-content: center;\">\n        <div>\n          <strong>Player 1</strong>\n          <ul role=\"list\">\n            ${Object.entries(bindings.player1).map(([action, key]) => `\n              <li role=\"listitem\">\n                <button class=\"control-key\" data-action=\"${action}\" data-player=\"1\" tabindex=\"0\" aria-label=\"${ACTION_LABELS[action] || action}\">\n                  <code>${key.replace('Key', '')}</code>\n                  <span class=\"visually-hidden\">${ACTION_LABELS[action] || action}</span>\n                </button>\n                <span style=\"margin-left: 8px;\">${ACTION_LABELS[action] || action}</span>\n              </li>\n            `).join('')}\n          </ul>\n        </div>\n        <div>\n          <strong>Player 2</strong>\n          <ul role=\"list\">\n            ${Object.entries(bindings.player2).map(([action, key]) => `\n              <li role=\"listitem\">\n                <button class=\"control-key\" data-action=\"${action}\" data-player=\"2\" tabindex=\"0\" aria-label=\"${ACTION_LABELS[action] || action}\">\n                  <code>${key.replace('Key', '')}</code>\n                  <span class=\"visually-hidden\">${ACTION_LABELS[action] || action}</span>\n                </button>\n                <span style=\"margin-left: 8px;\">${ACTION_LABELS[action] || action}</span>\n              </li>\n            `).join('')}\n          </ul>\n        </div>\n      </div>\n      <p style=\"margin-top:16px;font-size:0.95em;\">Tip: Hover or focus a key for details. Controls can be remapped in settings.</p>\n    `;\n    // Add close button\n    container.appendChild(createCloseButton());\n    // Tooltip logic\n    container.querySelectorAll('.control-key').forEach(btn => {\n      btn.addEventListener('mouseenter', e => {\n        const action = btn.dataset.action;\n        showTooltip(ACTION_LABELS[action] || action, btn);\n      });\n      btn.addEventListener('mouseleave', hideTooltip);\n      btn.addEventListener('focus', e => {\n        const action = btn.dataset.action;\n        showTooltip(ACTION_LABELS[action] || action, btn);\n      });\n      btn.addEventListener('blur', hideTooltip);\n    });\n    // Keyboard navigation\n    container.onkeydown = handleKeyNav;\n    // Animate in\n    setTimeout(() => { container.style.opacity = '1'; }, 10);\n    console.debug('[controlsInfo] Controls info rendered successfully.');\n  } catch (e) {\n    if (container) container.innerHTML = `<div style=\"color:#b91c1c\">Error loading controls info: ${e.message}</div>`;\n    console.warn('[controlsInfo] Render error:', e);\n  }\n}\n\nfunction showControlsInfo() {\n  try {\n    if (!container) renderControlsInfo();\n    container.style.display = '';\n    setTimeout(() => { container.style.opacity = '1'; }, 10);\n    container.focus();\n  } catch (e) {\n    console.warn('[controlsInfo] Show error:', e);\n  }\n}\n\nfunction hideControlsInfo() {\n  try {\n    if (container) {\n      container.style.opacity = '0';\n      setTimeout(() => { if (container) container.style.display = 'none'; }, 400);\n    }\n    hideTooltip();\n  } catch (e) {\n    console.warn('[controlsInfo] Hide error:', e);\n  }\n}\n\nfunction applySettings(settings) {\n  renderControlsInfo();\n}\n\n// Show/hide controls info based on screen state\nonScreenStateChange(state => {\n  const controlsInfoEl = document.querySelector('.controls-info');\n  if (!controlsInfoEl) return;\n  if (state === 'MENU' || state === 'SETTINGS_MENU') {\n    controlsInfoEl.style.display = 'block';\n  } else {\n    controlsInfoEl.style.display = 'none';\n  }\n});\n\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('settingsChanged', ({ settings }) => {\n    applySettings(settings);\n  });\n  eventManager.subscribe('keyBindingsChanged', ({ bindings }) => {\n    renderControlsInfo();\n  });\n  // Show controls info UI when remap is triggered\n  eventManager.subscribe('showControlsRemap', () => {\n    showControlsInfo();\n  });\n}\n\n// --- UI Integration: Expose controlsInfo API for other UI modules ---\nwindow.controlsInfoUI = {\n  renderControlsInfo,\n  showControlsInfo,\n  hideControlsInfo,\n  applySettings\n};\n\n// --- UI Integration: Listen for menu and messageDisplay events ---\ntry {\n  // Integrate with menu.js if available\n  if (window.menuDebug && typeof window.menuDebug.onMenuEvent === 'function') {\n    window.menuDebug.onMenuEvent('showMenu', ({ state }) => {\n      if (state === 'SETTINGS_MENU') showControlsInfo();\n      else hideControlsInfo();\n    });\n  }\n  // Integrate with messageDisplay.js if available\n  if (window.messageDisplayDebug?.onMessageEvent) {\n    window.messageDisplayDebug.onMessageEvent('show', ({ message, opts }) => {\n      if (message?.toLowerCase().includes('controls')) showControlsInfo();\n    });\n  }\n} catch (e) {\n  console.warn('[controlsInfo] UI integration error:', e);\n}\n\nexport {\n  renderControlsInfo,\n  showControlsInfo,\n  hideControlsInfo,\n  applySettings\n};","// healthBar.js - Modern, event-driven health bar UI for Stick Fighter\n// Author: Modularized for ES, accessibility, and advanced UI/UX\n\nimport { eventManager } from '../game/eventManager.js';\nimport { onScreenStateChange } from './screenManager.js';\n\nconst PLAYER_IDS = [1, 2];\nconst HEALTH_BAR_IDS = ['player1HealthBarInner', 'player2HealthBarInner'];\nconst HEALTH_LABELS = ['Player 1 Health', 'Player 2 Health'];\nconst LOW_HEALTH_THRESHOLD = 0.25; // 25%\n\nfunction getHealthBarEl(playerIdx) {\n  return document.getElementById(HEALTH_BAR_IDS[playerIdx]);\n}\n\nfunction getHealthBarContainer() {\n  return document.getElementById('healthBars');\n}\n\n// --- Utility: Get current health percent for a player (0-1) ---\nfunction getHealthPercent(player) {\n  if (!player || typeof player.health !== 'number' || typeof player.maxHealth !== 'number' || player.maxHealth === 0) return 0;\n  return Math.max(0, Math.min(1, player.health / player.maxHealth));\n}\n\n// --- Utility: Reset all health bars to full ---\nfunction resetHealthBars() {\n  PLAYER_IDS.forEach((_, idx) => {\n    const bar = getHealthBarEl(idx);\n    if (bar) {\n      bar.style.width = '100%';\n      bar.classList.remove('low-health', 'heal-effect', 'damage-effect');\n      bar.setAttribute('aria-valuenow', 100);\n    }\n  });\n}\n\n// --- Debug: Log health bar state ---\nfunction logHealthBarState(player) {\n  try {\n    let idx;\n    if (player.playerIndex !== undefined) {\n      idx = player.playerIndex;\n    } else if (player.id === 2) {\n      idx = 1;\n    } else {\n      idx = 0;\n    }\n    const bar = getHealthBarEl(idx);\n    if (!bar) {\n      console.warn(`[healthBar] No health bar found for player index ${idx}`);\n      return;\n    }\n    const percent = getHealthPercent(player);\n    console.debug(`[healthBar] Player ${idx + 1}: health=${player.health}, maxHealth=${player.maxHealth}, percent=${(percent * 100).toFixed(1)}%, barWidth=${bar.style.width}`);\n  } catch (e) {\n    console.warn('[healthBar] logHealthBarState error:', e);\n  }\n}\n\n// --- Enhanced error handling for DOM attachment ---\nfunction ensureHealthBarDOM() {\n  const container = getHealthBarContainer();\n  if (!container) {\n    console.error('[healthBar] Health bar container not found in DOM.');\n    return false;\n  }\n  for (const id of HEALTH_BAR_IDS) {\n    if (!document.getElementById(id)) {\n      console.error(`[healthBar] Health bar inner element missing: ${id}`);\n      return false;\n    }\n  }\n  return true;\n}\n\n// Patch updateHealthBar to use new utilities and debug\nfunction updateHealthBar(player) {\n  try {\n    if (!player || typeof player.health !== 'number' || typeof player.maxHealth !== 'number') return;\n    let idx;\n    if (player.playerIndex !== undefined) {\n      idx = player.playerIndex;\n    } else if (player.id === 2) {\n      idx = 1;\n    } else {\n      idx = 0;\n    }\n    const bar = getHealthBarEl(idx);\n    if (!bar) {\n      console.warn(`[healthBar] No health bar found for player index ${idx}`);\n      return;\n    }\n    const percent = getHealthPercent(player);\n    bar.style.width = (percent * 100) + '%';\n    bar.setAttribute('aria-valuenow', Math.round(percent * 100));\n    bar.setAttribute('aria-valuemax', 100);\n    bar.setAttribute('aria-label', HEALTH_LABELS[idx]);\n    // Low health pulse\n    if (percent <= LOW_HEALTH_THRESHOLD) {\n      bar.classList.add('low-health');\n    } else {\n      bar.classList.remove('low-health');\n    }\n    // Animate heal/damage\n    if (player._lastHealth !== undefined) {\n      if (player.health > player._lastHealth) {\n        bar.classList.add('heal-effect');\n        setTimeout(() => bar.classList.remove('heal-effect'), 500);\n      } else if (player.health < player._lastHealth) {\n        bar.classList.add('damage-effect');\n        setTimeout(() => bar.classList.remove('damage-effect'), 500);\n      }\n    }\n    player._lastHealth = player.health;\n    logHealthBarState(player);\n  } catch (e) {\n    console.warn('[healthBar] Update error:', e);\n  }\n}\n\nfunction showHealthBars() {\n  const container = getHealthBarContainer();\n  if (container) container.style.display = 'flex';\n}\n\nfunction hideHealthBars() {\n  const container = getHealthBarContainer();\n  if (container) container.style.display = 'none';\n}\n\n// --- Animated Score/Combo Popups ---\nfunction showScorePopup(playerIdx, value, type = 'score') {\n  const bar = getHealthBarEl(playerIdx);\n  if (!bar) return;\n  let popup = document.createElement('span');\n  popup.className = `score-popup ${type}`;\n  let text = '';\n  if (type === 'combo') {\n    text = 'Combo! +' + value;\n  } else if (value > 0) {\n    text = '+' + value;\n  } else {\n    text = value;\n  }\n  popup.textContent = text;\n  bar.appendChild(popup);\n  setTimeout(() => {\n    popup.classList.add('fade');\n    setTimeout(() => popup.remove(), 600);\n  }, 10);\n}\n\n// --- Tooltip Support for Health Bars ---\nfunction attachHealthBarTooltips() {\n  HEALTH_BAR_IDS.forEach((id, idx) => {\n    const el = document.getElementById(id);\n    if (!el) return;\n    el.setAttribute('tabindex', '0');\n    el.setAttribute('role', 'tooltip');\n    el.setAttribute('aria-describedby', `healthBarTooltip${idx}`);\n    let tooltip = document.createElement('span');\n    tooltip.className = 'health-bar-tooltip';\n    tooltip.id = `healthBarTooltip${idx}`;\n    tooltip.textContent = HEALTH_LABELS[idx];\n    el.appendChild(tooltip);\n    el.addEventListener('focus', () => tooltip.classList.add('show'));\n    el.addEventListener('blur', () => tooltip.classList.remove('show'));\n    el.addEventListener('mouseenter', () => tooltip.classList.add('show'));\n    el.addEventListener('mouseleave', () => tooltip.classList.remove('show'));\n  });\n}\n\n// --- Winner/Loser Effects ---\nfunction setWinnerLoserEffect(winnerIdx, loserIdx) {\n  HEALTH_BAR_IDS.forEach((id, idx) => {\n    const el = document.getElementById(id);\n    if (!el) return;\n    el.classList.remove('winner', 'loser');\n    if (idx === winnerIdx) el.classList.add('winner');\n    if (idx === loserIdx) el.classList.add('loser');\n  });\n}\n\n// Clear any winner/loser CSS effects from health bars\nfunction clearWinnerLoserEffect() {\n  HEALTH_BAR_IDS.forEach(id => {\n    const el = document.getElementById(id);\n    if (!el) return;\n    el.classList.remove('winner', 'loser');\n  });\n}\n\n// --- Round Timer Bar ---\nfunction updateRoundTimerBar(percent) {\n  let timerBar = document.getElementById('roundTimerBar');\n  if (!timerBar) {\n    const container = getHealthBarContainer();\n    if (!container) return;\n    timerBar = document.createElement('div');\n    timerBar.id = 'roundTimerBar';\n    timerBar.className = 'round-timer-bar';\n    container.appendChild(timerBar);\n  }\n  timerBar.style.width = `${Math.max(0, Math.min(100, percent * 100))}%`;\n}\n\n// --- Visually Hidden Utility (for accessibility) ---\nfunction visuallyHide(el) {\n  if (el) el.classList.add('visually-hidden');\n}\nfunction visuallyShow(el) {\n  if (el) el.classList.remove('visually-hidden');\n}\n\n// --- Integration: Attach tooltips and clear effects on render ---\nfunction renderHealthBars(players = []) {\n  // Defensive: ensure DOM structure exists\n  const container = getHealthBarContainer();\n  if (!container) return;\n  container.innerHTML = `\n    <div id=\"player1HealthBar\" class=\"health-bar player-1-health\" role=\"progressbar\" aria-label=\"Player 1 Health\">\n      <div id=\"player1HealthBarInner\" class=\"health-bar-inner\" aria-valuenow=\"100\" aria-valuemax=\"100\" aria-label=\"Player 1 Health\"><span class=\"visually-hidden\">Player 1 Health</span></div>\n    </div>\n    <div id=\"player2HealthBar\" class=\"health-bar player-2-health\" role=\"progressbar\" aria-label=\"Player 2 Health\">\n      <div id=\"player2HealthBarInner\" class=\"health-bar-inner\" aria-valuenow=\"100\" aria-valuemax=\"100\" aria-label=\"Player 2 Health\"><span class=\"visually-hidden\">Player 2 Health</span></div>\n    </div>\n  `;\n  // Initial update\n  players.forEach(updateHealthBar);\n  attachHealthBarTooltips();\n  updateRoundTimerBar(1); // Full timer at start\n}\n\n// --- Enhanced Error Handling, Event Management, and Debugging ---\nfunction safeGetHealthBarEl(playerIdx) {\n  try {\n    return getHealthBarEl(playerIdx);\n  } catch (e) {\n    console.warn(`[healthBar] safeGetHealthBarEl error for idx ${playerIdx}:`, e);\n    return null;\n  }\n}\n\nfunction safeGetHealthBarContainer() {\n  try {\n    return getHealthBarContainer();\n  } catch (e) {\n    console.warn('[healthBar] safeGetHealthBarContainer error:', e);\n    return null;\n  }\n}\n\nfunction safeUpdateHealthBar(player) {\n  try {\n    updateHealthBar(player);\n  } catch (e) {\n    console.warn('[healthBar] safeUpdateHealthBar error:', e);\n  }\n}\n\nfunction safeShowScorePopup(playerIdx, value, type = 'score') {\n  try {\n    showScorePopup(playerIdx, value, type);\n  } catch (e) {\n    console.warn('[healthBar] safeShowScorePopup error:', e);\n  }\n}\n\nfunction safeSetWinnerLoserEffect(winnerIdx, loserIdx) {\n  try {\n    setWinnerLoserEffect(winnerIdx, loserIdx);\n  } catch (e) {\n    console.warn('[healthBar] safeSetWinnerLoserEffect error:', e);\n  }\n}\n\nfunction safeUpdateRoundTimerBar(percent) {\n  try {\n    updateRoundTimerBar(percent);\n  } catch (e) {\n    console.warn('[healthBar] safeUpdateRoundTimerBar error:', e);\n  }\n}\n\n// --- Robust Event Management: Custom Event Listeners ---\nconst healthBarEventListeners = {};\nfunction onHealthBarEvent(eventType, listener) {\n  if (typeof eventType !== 'string' || typeof listener !== 'function') return;\n  if (!healthBarEventListeners[eventType]) healthBarEventListeners[eventType] = [];\n  healthBarEventListeners[eventType].push(listener);\n}\nfunction offHealthBarEvent(eventType, listener) {\n  if (!healthBarEventListeners[eventType]) return;\n  healthBarEventListeners[eventType] = healthBarEventListeners[eventType].filter(l => l !== listener);\n}\nfunction fireHealthBarEvent(eventType, detail) {\n  if (healthBarEventListeners[eventType]) {\n    healthBarEventListeners[eventType].forEach(listener => {\n      try { listener(detail); } catch (e) { console.error(`[healthBar] Error in custom event listener for ${eventType}:`, e); }\n    });\n  }\n}\nfunction dispatchHealthBarEvent(eventType, detail = {}) {\n  try {\n    fireHealthBarEvent(eventType, detail);\n    if (window?.DEBUG_MODE) console.debug(`[healthBar] Dispatched event: ${eventType}`, detail);\n  } catch (e) {\n    console.error(`[healthBar] Error dispatching event (${eventType}):`, e);\n  }\n}\n\n// Hide/show health bars based on screen state\nonScreenStateChange(state => {\n  if (state === 'PLAYING' || state === 'PAUSED') {\n    showHealthBars();\n  } else {\n    hideHealthBars();\n  }\n});\n\n// --- Debug: Expose healthBar state and API for inspection ---\nwindow.healthBarDebug = {\n  getHealthBarEl,\n  getHealthBarContainer,\n  updateHealthBar,\n  renderHealthBars,\n  showHealthBars,\n  hideHealthBars,\n  getHealthPercent,\n  resetHealthBars,\n  logHealthBarState,\n  ensureHealthBarDOM,\n  showScorePopup,\n  setWinnerLoserEffect,\n  updateRoundTimerBar,\n  visuallyHide,\n  visuallyShow,\n  onHealthBarEvent,\n  offHealthBarEvent,\n  dispatchHealthBarEvent,\n  healthBarEventListeners,\n  clearWinnerLoserEffect // Expose clear stub for healthBar debugging\n};\n\n// Event-driven updates\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('playerHit', ({ defender }) => updateHealthBar(defender));\n  eventManager.subscribe('playerHealed', ({ player }) => updateHealthBar(player));\n  eventManager.subscribe('fightStart', ({ players }) => {\n    renderHealthBars(players);\n    showHealthBars();\n  });\n  eventManager.subscribe('fightEnd', () => hideHealthBars());\n  eventManager.subscribe('playerDefeated', ({ winner, loser }) => {\n    if (winner && loser && winner.playerIndex !== undefined && loser.playerIndex !== undefined) {\n      setWinnerLoserEffect(winner.playerIndex, loser.playerIndex);\n    }\n  });\n  eventManager.subscribe('fightStart', () => clearWinnerLoserEffect());\n  eventManager.subscribe('scorePopup', ({ playerIdx, value, type }) => showScorePopup(playerIdx, value, type));\n  eventManager.subscribe('comboPopup', ({ playerIdx, value }) => showScorePopup(playerIdx, value, 'combo'));\n  eventManager.subscribe('winnerLoser', ({ winnerIdx, loserIdx }) => setWinnerLoserEffect(winnerIdx, loserIdx));\n  eventManager.subscribe('roundTimer', ({ percent }) => updateRoundTimerBar(percent));\n}\n\n// --- UI Integration: Expose healthBar API for other UI modules ---\nwindow.healthBarUI = {\n  updateHealthBar: safeUpdateHealthBar,\n  renderHealthBars,\n  showHealthBars,\n  hideHealthBars,\n  getHealthPercent,\n  resetHealthBars,\n  logHealthBarState,\n  ensureHealthBarDOM,\n  showScorePopup: safeShowScorePopup,\n  setWinnerLoserEffect: safeSetWinnerLoserEffect,\n  updateRoundTimerBar: safeUpdateRoundTimerBar,\n  visuallyHide,\n  visuallyShow,\n  onHealthBarEvent,\n  offHealthBarEvent,\n  dispatchHealthBarEvent,\n  clearWinnerLoserEffect // Expose clear stub for healthBar UI integration\n};\n\n// Export core health bar API for external modules\nexport { updateHealthBar, showHealthBars, hideHealthBars };","// menu.js - Modern, event-driven menu UI for Stick Fighter\n// Author: Modularized for ES, accessibility, and advanced UI/UX\n\nimport { eventManager } from '../game/eventManager.js';\n\n// Menu states\nconst MENU_STATES = ['MENU', 'MODE_SELECT', 'DIFFICULTY_SELECT', 'PAUSED', 'SETTINGS_MENU', 'END'];\nlet currentMenuState = 'MENU';\n\n// Menu button definitions (mirrors canvas-drawn buttons)\nconst MENU_BUTTONS = {\n  MENU: [\n    { id: 'start', text: 'Start Game', color: '#60a5fa', hoverColor: '#3b82f6', textColor: '#fff' }\n  ],\n  MODE_SELECT: [\n    { id: 'pvp', text: 'Player vs Player', color: '#34d399', hoverColor: '#10b981', textColor: '#fff' },\n    { id: 'pvc', text: 'Player vs Computer', color: '#fbbf24', hoverColor: '#f59e0b', textColor: '#92400e' }\n  ],\n  DIFFICULTY_SELECT: [\n    { id: 'easy', text: 'Easy', color: '#a7f3d0', hoverColor: '#6ee7b7', textColor: '#065f46' },\n    { id: 'medium', text: 'Medium', color: '#fcd34d', hoverColor: '#fbbf24', textColor: '#92400e' },\n    { id: 'hard', text: 'Hard', color: '#f87171', hoverColor: '#ef4444', textColor: '#991b1b' }\n  ],\n  PAUSED: [\n    { id: 'resume', text: 'Resume', color: '#34d399', hoverColor: '#10b981', textColor: '#fff' },\n    { id: 'pauseSettings', text: 'Settings', color: '#fbbf24', hoverColor: '#f59e0b', textColor: '#fff' },\n    { id: 'pauseMainMenu', text: 'Main Menu', color: '#f87171', hoverColor: '#ef4444', textColor: '#fff' }\n  ],\n  SETTINGS_MENU: [\n    { id: 'settingsBack', text: 'Back', color: '#60a5fa', hoverColor: '#3b82f6', textColor: '#fff' },\n    { id: 'gravityLow', text: 'Gravity: Low', color: '#fbbf24', hoverColor: '#fde68a', textColor: '#92400e' },\n    { id: 'gravityNormal', text: 'Gravity: Normal', color: '#60a5fa', hoverColor: '#3b82f6', textColor: '#2563eb' },\n    { id: 'gravityHigh', text: 'Gravity: High', color: '#ef4444', hoverColor: '#f87171', textColor: '#fff' }\n  ],\n  END: [\n    { id: 'endMainMenu', text: 'Main Menu', color: '#60a5fa', hoverColor: '#3b82f6', textColor: '#fff' }\n  ]\n};\n\n// --- Menu Overlay DOM Management ---\nlet overlay = null;\n\nfunction createMenuOverlay() {\n  const el = document.createElement('div');\n  el.className = 'menu-overlay';\n  el.setAttribute('role', 'dialog');\n  el.setAttribute('aria-modal', 'true');\n  el.setAttribute('tabindex', '-1');\n  el.style.display = 'none';\n  document.body.appendChild(el);\n  return el;\n}\n\nfunction getMenuOverlay() {\n  if (!overlay) overlay = createMenuOverlay();\n  return overlay;\n}\n\nfunction getMenuTitle(state) {\n  switch (state) {\n    case 'MENU': return 'Stick Fighter';\n    case 'MODE_SELECT': return 'Select Mode';\n    case 'DIFFICULTY_SELECT': return 'Select Difficulty';\n    case 'PAUSED': return 'Paused';\n    case 'SETTINGS_MENU': return 'Settings';\n    case 'END': return 'Game Over';\n    default: return '';\n  }\n}\n\nfunction createMenuButton(btn, onClick) {\n  const button = document.createElement('button');\n  button.className = 'menu-button';\n  button.id = btn.id;\n  button.textContent = btn.text;\n  button.style.background = btn.color;\n  button.style.color = btn.textColor;\n  button.setAttribute('tabindex', '0');\n  button.setAttribute('aria-label', btn.text);\n  button.addEventListener('mouseenter', () => button.style.background = btn.hoverColor);\n  button.addEventListener('mouseleave', () => button.style.background = btn.color);\n  button.addEventListener('click', onClick);\n  return button;\n}\n\nfunction clearMenuOverlay() {\n  const overlay = getMenuOverlay();\n  overlay.innerHTML = '';\n  overlay.classList.remove('active');\n  overlay.style.display = 'none';\n}\n\nfunction focusFirstMenuButton() {\n  const overlay = getMenuOverlay();\n  const btn = overlay.querySelector('button');\n  if (btn) btn.focus();\n}\n\n// --- Enhancement 1: Type Safety and Input Validation ---\nfunction isValidMenuState(state) {\n  return MENU_STATES.includes(state);\n}\nfunction isValidMenuEventType(eventType) {\n  // Accepts both built-in and custom menu events\n  const builtInEvents = [\n    'menuStart', 'menuModeSelect', 'menuDifficultySelect', 'menuMainMenu',\n    'settingsChanged', 'pause', 'resume', 'gameOver', 'showMenu'\n  ];\n  return typeof eventType === 'string' && (builtInEvents.includes(eventType) || eventType in menuEventListeners);\n}\nfunction isValidMenuButtonDef(btn) {\n  return btn && typeof btn.id === 'string' && typeof btn.text === 'string';\n}\n\n// Patch updateMenuState and renderMenu for validation\nfunction updateMenuState(state) {\n  try {\n    if (!isValidMenuState(state)) {\n      console.warn(`[menu] Attempted to update to invalid state: ${state}`);\n      return;\n    }\n    currentMenuState = state;\n    renderMenu(state);\n  } catch (e) {\n    console.error('[menu] Error updating menu state:', e);\n  }\n}\nfunction renderMenu(state = currentMenuState) {\n  try {\n    const overlay = getMenuOverlay();\n    clearMenuOverlay();\n    if (!isValidMenuState(state)) {\n      console.warn(`[menu] Invalid menu state: ${state}`);\n      return;\n    }\n    const buttons = MENU_BUTTONS[state] || [];\n    // Title\n    const title = getMenuTitle(state);\n    if (title) {\n      const h2 = document.createElement('h2');\n      h2.className = 'menu-overlay-text';\n      h2.textContent = title;\n      overlay.appendChild(h2);\n    }\n    // Buttons\n    buttons.forEach(btn => {\n      if (!isValidMenuButtonDef(btn)) {\n        console.warn('[menu] Invalid button definition:', btn);\n        return;\n      }\n      try {\n        const button = createMenuButton(btn, () => {\n          logMenuEvent('buttonClick', { id: btn.id, state });\n          handleMenuAction(btn.id);\n        });\n        overlay.appendChild(button);\n      } catch (e) {\n        console.error(`[menu] Error rendering button ${btn.id}:`, e);\n      }\n    });\n    overlay.style.display = 'block';\n    setTimeout(() => {\n      animateMenuIn();\n      focusFirstMenuButton();\n      addMenuButtonTooltips();\n    }, 10);\n    overlay.focus();\n    logMenuEvent('menuShown', { state });\n  } catch (e) {\n    console.error('[menu] Error rendering menu:', e);\n  }\n}\n// Patch event registration for validation - moved to avoid duplication\n\n// --- Enhancement 2: Performance and Memory Management ---\n// Remove all menu button tooltips before re-adding (prevents duplicate listeners)\nfunction addMenuButtonTooltips() {\n  const overlay = getMenuOverlay();\n  overlay.querySelectorAll('button').forEach(btn => {\n    btn.removeEventListener('mouseenter', btn._menuTooltipEnter);\n    btn.removeEventListener('mouseleave', btn._menuTooltipLeave);\n    btn._menuTooltipEnter = () => btn.setAttribute('title', btn.textContent);\n    btn._menuTooltipLeave = () => btn.removeAttribute('title');\n    btn.addEventListener('mouseenter', btn._menuTooltipEnter);\n    btn.addEventListener('mouseleave', btn._menuTooltipLeave);\n  });\n}\n// Clean up all custom menu event listeners for a given event type\nfunction clearMenuEventListeners(eventType) {\n  if (menuEventListeners[eventType]) {\n    menuEventListeners[eventType].length = 0;\n  }\n}\n// Optionally: clear all listeners (for teardown or reload)\nfunction clearAllMenuEventListeners() {\n  Object.keys(menuEventListeners).forEach(evt => {\n    menuEventListeners[evt].length = 0;\n  });\n}\n\n// --- Animation and Logging ---\nfunction animateMenuIn() {\n  const overlay = getMenuOverlay();\n  overlay.classList.add('active');\n}\nfunction animateMenuOut() {\n  const overlay = getMenuOverlay();\n  overlay.classList.remove('active');\n}\n\nfunction logMenuEvent(event, detail) {\n  if (window?.DEBUG_MODE) {\n    console.debug(`[MENU ANALYTICS] ${event}`, detail);\n  }\n}\n\n// --- Menu Rendering and Hiding ---\nfunction hideMenu() {\n  try {\n    const overlay = getMenuOverlay();\n    if (!overlay) return;\n    animateMenuOut();\n    setTimeout(() => { if (overlay) overlay.style.display = 'none'; }, 400);\n    logMenuEvent('menuHidden', { state: currentMenuState });\n  } catch (e) {\n    console.error('[menu] Error hiding menu:', e);\n  }\n}\n\n// --- Enhanced Event Management & Debugging ---\n// Centralized menu event dispatching and logging\n// --- Advanced Event-Driven Features ---\n// Allow external modules to register custom menu event listeners\nconst menuEventListeners = {};\nfunction onMenuEvent(eventType, listener) {\n  if (!isValidMenuEventType(eventType)) {\n    console.warn('[menu] Attempted to register invalid event type:', eventType);\n    return;\n  }\n  if (!menuEventListeners[eventType]) menuEventListeners[eventType] = [];\n  menuEventListeners[eventType].push(listener);\n}\nfunction offMenuEvent(eventType, listener) {\n  if (!isValidMenuEventType(eventType)) return;\n  if (!menuEventListeners[eventType]) return;\n  menuEventListeners[eventType] = menuEventListeners[eventType].filter(l => l !== listener);\n}\n// Internal: Fire all registered listeners for a menu event\nfunction fireMenuEvent(eventType, detail) {\n  if (menuEventListeners[eventType]) {\n    menuEventListeners[eventType].forEach(listener => {\n      try { listener(detail); } catch (e) { console.error(`[menu] Error in custom menu event listener for ${eventType}:`, e); }\n    });\n  }\n}\n// Patch dispatchMenuEvent to also fire custom listeners\nfunction dispatchMenuEvent(eventType, detail = {}) {\n  try {\n    if (!isValidMenuEventType(eventType)) {\n      console.warn('[menu] Attempted to dispatch invalid event type:', eventType);\n      return;\n    }\n    if (eventManager && typeof eventManager.dispatchEvent === 'function') {\n      eventManager.dispatchEvent(eventType, detail);\n      logMenuEvent('eventDispatched', { eventType, detail });\n    } else {\n      console.warn('[menu] EventManager not available for event:', eventType, detail);\n    }\n    fireMenuEvent(eventType, detail);\n  } catch (e) {\n    console.error(`[menu] Error dispatching event (${eventType}):`, e);\n  }\n}\n// --- Advanced: One-time event listener ---\nfunction onceMenuEvent(eventType, listener) {\n  function wrapper(detail) {\n    offMenuEvent(eventType, wrapper);\n    listener(detail);\n  }\n  onMenuEvent(eventType, wrapper);\n}\n// --- Advanced: Menu event queue for async workflows ---\nconst menuEventQueue = [];\nfunction queueMenuEvent(eventType, detail = {}) {\n  menuEventQueue.push({ eventType, detail });\n}\nfunction processMenuEventQueue() {\n  while (menuEventQueue.length > 0) {\n    const evt = menuEventQueue.shift();\n    dispatchMenuEvent(evt.eventType, evt.detail);\n  }\n}\n\n// Subscribe to all menu-related events for debug logging\nfunction subscribeMenuDebugEvents() {\n  if (!eventManager || typeof eventManager.subscribe !== 'function') return;\n  const debugEvents = [\n    'menuStart', 'menuModeSelect', 'menuDifficultySelect', 'menuMainMenu',\n    'settingsChanged', 'pause', 'resume', 'gameOver', 'showMenu'\n  ];\n  debugEvents.forEach(evt => {\n    eventManager.subscribe(evt, detail => {\n      logMenuEvent('eventReceived', { event: evt, detail });\n    });\n  });\n}\nsubscribeMenuDebugEvents();\n\n// Patch handleMenuAction to use dispatchMenuEvent\nfunction handleMenuAction(id) {\n  try {\n    switch (id) {\n      case 'start':\n        dispatchMenuEvent('menuStart', {});\n        hideMenu();\n        break;\n      case 'pvp':\n        dispatchMenuEvent('menuModeSelect', { mode: 'PvP' });\n        hideMenu();\n        break;\n      case 'pvc':\n        updateMenuState('DIFFICULTY_SELECT');\n        break;\n      case 'easy':\n      case 'medium':\n      case 'hard':\n        dispatchMenuEvent('menuDifficultySelect', { difficulty: id });\n        hideMenu();\n        break;\n      case 'resume':\n        dispatchMenuEvent('resume', {});\n        hideMenu();\n        break;\n      case 'pauseSettings':\n        updateMenuState('SETTINGS_MENU');\n        break;\n      case 'pauseMainMenu':\n      case 'endMainMenu':\n        dispatchMenuEvent('menuMainMenu', {});\n        dispatchMenuEvent('resetKeyBindings', {}); // Enhanced: trigger controls reset\n        hideMenu();\n        break;\n      case 'settingsBack':\n        updateMenuState('PAUSED');\n        break;\n      case 'gravityLow':\n        dispatchMenuEvent('settingsChanged', { gravity: 'low' });\n        break;\n      case 'gravityNormal':\n        dispatchMenuEvent('settingsChanged', { gravity: 'normal' });\n        break;\n      case 'gravityHigh':\n        dispatchMenuEvent('settingsChanged', { gravity: 'high' });\n        break;\n      default:\n        console.warn(`[menu] Unhandled menu action: ${id}`);\n        break;\n    }\n  } catch (e) {\n    console.error(`[menu] Error handling menu action (${id}):`, e);\n  }\n}\n\n// --- Keyboard Navigation & Accessibility ---\ndocument.addEventListener('keydown', e => {\n  try {\n    if (!overlay || overlay.style.display !== 'block') return;\n    const focusable = Array.from(overlay.querySelectorAll('button'));\n    const idx = focusable.indexOf(document.activeElement);\n    if (e.key === 'ArrowDown' || e.key === 'Tab') {\n      focusable[(idx + 1) % focusable.length]?.focus();\n      e.preventDefault();\n    } else if (e.key === 'ArrowUp') {\n      focusable[(idx - 1 + focusable.length) % focusable.length]?.focus();\n      e.preventDefault();\n    } else if (e.key === 'Escape') {\n      if (currentMenuState === 'SETTINGS_MENU') updateMenuState('PAUSED');\n      else if (currentMenuState === 'PAUSED' || currentMenuState === 'END') hideMenu();\n      e.preventDefault();\n    }\n  } catch (e2) {\n    console.error('[menu] Keyboard navigation error:', e2);\n  }\n});\n\n// --- Event-driven integration ---\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('pause', () => updateMenuState('PAUSED'));\n  eventManager.subscribe('resume', () => hideMenu());\n  eventManager.subscribe('gameOver', () => updateMenuState('END'));\n  eventManager.subscribe('showMenu', ({ state }) => updateMenuState(state));\n}\n\n// --- Debug: Expose menu state and overlay for inspection ---\nwindow.menuDebug = {\n  getState: () => currentMenuState,\n  getOverlay: () => getMenuOverlay(),\n  showMenu: renderMenu,\n  hideMenu,\n  updateMenuState,\n  MENU_STATES,\n  MENU_BUTTONS,\n  onMenuEvent,\n  offMenuEvent,\n  onceMenuEvent,\n  queueMenuEvent,\n  processMenuEventQueue,\n  menuEventListeners,\n  menuEventQueue,\n  clearMenuEventListeners,\n  clearAllMenuEventListeners\n};\n\n// --- UI Integration: Expose menu API for other UI modules ---\nwindow.menuUI = {\n  renderMenu,\n  hideMenu,\n  updateMenuState,\n  handleMenuAction,\n  MENU_STATES,\n  MENU_BUTTONS,\n  onMenuEvent, // Only one assignment here\n  offMenuEvent,\n  onceMenuEvent,\n  queueMenuEvent,\n  processMenuEventQueue,\n  menuEventListeners,\n  menuEventQueue,\n  clearMenuEventListeners,\n  clearAllMenuEventListeners\n};\n\n// Export core menu API for external modules\nexport { updateMenuState };","// messageDisplay.js - Modern, event-driven message display UI for Stick Fighter\n// Author: Modularized for ES, accessibility, and advanced UI/UX\n\nimport { eventManager } from '../game/eventManager.js';\nimport { onScreenStateChange } from './screenManager.js';\n\nlet container = null;\nlet hideTimeout = null;\nconst DEFAULT_DURATION = 2500;\n\nfunction getMessageContainer() {\n  if (!container) {\n    container = document.getElementById('messageDisplay');\n    if (!container) {\n      container = document.createElement('div');\n      container.id = 'messageDisplay';\n      document.body.appendChild(container);\n    }\n    container.setAttribute('role', 'status');\n    container.setAttribute('aria-live', 'polite');\n    container.setAttribute('tabindex', '-1');\n    container.className = '';\n    container.style.display = 'none';\n    container.addEventListener('keydown', e => {\n      if (e.key === 'Escape') hideMessage();\n    });\n  }\n  return container;\n}\n\nfunction showMessage(message, opts = {}) {\n  try {\n    if (typeof message !== 'string' || !message.trim()) throw new Error('Message must be a non-empty string');\n    const el = getMessageContainer();\n    if (!el) throw new Error('Message container not found');\n    clearTimeout(hideTimeout);\n    el.textContent = message;\n    el.className = 'active';\n    el.style.display = 'block';\n    el.setAttribute('aria-label', message);\n    try { el.focus(); } catch (e) { console.warn('[messageDisplay] Focus error:', e); }\n    if (opts.critical) el.classList.add('critical');\n    messageHistory.push({ message, opts, timestamp: Date.now() });\n    if (opts.duration !== 0) {\n      hideTimeout = setTimeout(() => {\n        try {\n          hideMessage();\n          if (typeof opts.onHide === 'function') opts.onHide();\n        } catch (e) {\n          console.warn('[messageDisplay] Error in hideMessage/onHide:', e);\n        }\n      }, opts.duration || DEFAULT_DURATION);\n    } else if (typeof opts.onHide === 'function') {\n      // If persistent, call onHide only when hideMessage is called\n      const origHide = hideMessage;\n      hideMessage = function patchedHide() {\n        try {\n          origHide();\n          opts.onHide();\n        } catch (e) {\n          console.warn('[messageDisplay] Error in persistent onHide:', e);\n        } finally {\n          hideMessage = origHide;\n        }\n      };\n    }\n    if (window?.DEBUG_MODE) console.debug('[messageDisplay] showMessage:', message, opts);\n    fireMessageEvent('show', { message, opts });\n  } catch (e) {\n    console.warn('[messageDisplay] Show error:', e);\n    try {\n      const el = getMessageContainer();\n      if (el) {\n        el.textContent = 'Error displaying message.';\n        el.className = 'active critical';\n        el.style.display = 'block';\n      }\n    } catch {}\n  }\n}\n\nfunction hideMessage() {\n  try {\n    const el = getMessageContainer();\n    if (!el) throw new Error('Message container not found');\n    el.classList.remove('active', 'critical');\n    el.style.opacity = '0';\n    setTimeout(() => {\n      try {\n        el.style.display = 'none';\n        el.textContent = '';\n        el.style.opacity = '';\n      } catch (e) {\n        console.warn('[messageDisplay] Error clearing message:', e);\n      }\n    }, 400);\n    if (window?.DEBUG_MODE) console.debug('[messageDisplay] hideMessage');\n  } catch (e) {\n    console.warn('[messageDisplay] Hide error:', e);\n  }\n}\n\nfunction setCritical(isCritical = true) {\n  try {\n    const el = getMessageContainer();\n    if (!el) throw new Error('Message container not found');\n    if (isCritical) el.classList.add('critical');\n    else el.classList.remove('critical');\n  } catch (e) {\n    console.warn('[messageDisplay] setCritical error:', e);\n  }\n}\n\nfunction isVisible() {\n  try {\n    const el = getMessageContainer();\n    return el && el.style.display !== 'none';\n  } catch (e) {\n    console.warn('[messageDisplay] isVisible error:', e);\n    return false;\n  }\n}\n\nfunction logMessageEvent(event, detail) {\n  if (window?.DEBUG_MODE) {\n    console.debug(`[MESSAGE ANALYTICS] ${event}`, detail);\n  }\n}\n\n// --- Event-driven integration ---\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('playerDefeated', ({ winner, loser }) => {\n    showMessage(`${winner} defeated ${loser}!`, { critical: true, duration: 3000 });\n    logMessageEvent('playerDefeated', { winner, loser });\n  });\n  eventManager.subscribe('powerupCollected', ({ player, powerup }) => {\n    showMessage(`${player.name || 'Player'} collected a ${powerup.type} powerup!`);\n    logMessageEvent('powerupCollected', { player, powerup });\n  });\n  eventManager.subscribe('pause', () => {\n    showMessage('Paused', { duration: 0 });\n    logMessageEvent('pause');\n  });\n  eventManager.subscribe('resume', () => {\n    hideMessage();\n    logMessageEvent('resume');\n  });\n  eventManager.subscribe('settingsChanged', () => {\n    showMessage('Settings updated!', { duration: 1200 });\n    logMessageEvent('settingsChanged');\n  });\n  eventManager.subscribe('diagnostic', ({ event, data }) => {\n    if (window?.DEBUG_MODE) showMessage(`[DIAGNOSTIC] ${event}`, { duration: 1200 });\n    logMessageEvent('diagnostic', { event, data });\n  });\n}\n\n// --- Accessibility: Keyboard dismiss ---\ndocument.addEventListener('keydown', e => {\n  if (e.key === 'Escape' && isVisible()) hideMessage();\n});\n\n// --- Enhanced Event Management & Debugging ---\nconst messageEventListeners = {};\n\nfunction onMessageEvent(eventType, listener) {\n  if (typeof eventType !== 'string' || typeof listener !== 'function') return;\n  if (!messageEventListeners[eventType]) messageEventListeners[eventType] = [];\n  messageEventListeners[eventType].push(listener);\n}\n\nfunction offMessageEvent(eventType, listener) {\n  if (!messageEventListeners[eventType]) return;\n  messageEventListeners[eventType] = messageEventListeners[eventType].filter(l => l !== listener);\n}\n\nfunction fireMessageEvent(eventType, detail) {\n  if (messageEventListeners[eventType]) {\n    messageEventListeners[eventType].forEach(listener => {\n      try { listener(detail); } catch (e) { console.error(`[messageDisplay] Error in custom event listener for ${eventType}:`, e); }\n    });\n  }\n}\n\nfunction dispatchMessageEvent(eventType, detail = {}) {\n  try {\n    fireMessageEvent(eventType, detail);\n    logMessageEvent('eventDispatched', { eventType, detail });\n  } catch (e) {\n    console.error(`[messageDisplay] Error dispatching event (${eventType}):`, e);\n  }\n}\n\n// --- Utility: Message Queue for Sequential Display ---\nconst messageQueue = [];\nlet isMessageActive = false;\n\nfunction queueMessage(message, opts = {}) {\n  try {\n    messageQueue.push({ message, opts });\n    processMessageQueue();\n  } catch (e) {\n    console.warn('[messageDisplay] queueMessage error:', e);\n  }\n}\n\nfunction processMessageQueue() {\n  try {\n    if (isMessageActive || messageQueue.length === 0) return;\n    const { message, opts } = messageQueue.shift();\n    isMessageActive = true;\n    showMessage(message, {\n      ...opts,\n      onHide: () => {\n        isMessageActive = false;\n        processMessageQueue();\n      }\n    });\n  } catch (e) {\n    console.warn('[messageDisplay] processMessageQueue error:', e);\n    isMessageActive = false;\n  }\n}\n\n// --- Utility: Persistent Message (stays until explicitly hidden) ---\nfunction showPersistentMessage(message, opts = {}) {\n  try {\n    showMessage(message, { ...opts, duration: 0 });\n  } catch (e) {\n    console.warn('[messageDisplay] showPersistentMessage error:', e);\n  }\n}\n\n// --- Utility: Flash Message (shows briefly, then restores previous message if any) ---\nlet lastPersistentMessage = null;\nfunction flashMessage(message, opts = {}) {\n  try {\n    const el = getMessageContainer();\n    if (el && el.style.display !== 'none') {\n      lastPersistentMessage = el.textContent;\n    }\n    showMessage(message, { ...opts, duration: opts.duration || 1000 });\n    setTimeout(() => {\n      try {\n        if (lastPersistentMessage) {\n          showPersistentMessage(lastPersistentMessage);\n          lastPersistentMessage = null;\n        }\n      } catch (e) {\n        console.warn('[messageDisplay] flashMessage restore error:', e);\n      }\n    }, opts.duration || 1000);\n  } catch (e) {\n    console.warn('[messageDisplay] flashMessage error:', e);\n  }\n}\n\n// --- Utility: Message History ---\nconst messageHistory = [];\nfunction getMessageHistory() {\n  try {\n    return [...messageHistory];\n  } catch (e) {\n    console.warn('[messageDisplay] getMessageHistory error:', e);\n    return [];\n  }\n}\n\n// --- Utility: Clear All Messages and Queue ---\nfunction clearAllMessages() {\n  try {\n    messageQueue.length = 0;\n    hideMessage();\n  } catch (e) {\n    console.warn('[messageDisplay] clearAllMessages error:', e);\n  }\n}\n\n// --- Utility: Set Message Style Dynamically ---\nfunction setMessageStyle(styleObj = {}) {\n  try {\n    const el = getMessageContainer();\n    if (!el) throw new Error('Message container not found');\n    Object.entries(styleObj).forEach(([k, v]) => {\n      el.style[k] = v;\n    });\n  } catch (e) {\n    console.warn('[messageDisplay] setMessageStyle error:', e);\n  }\n}\n\n// --- Utility: Set Message Icon ---\nfunction setMessageIcon(iconHtml) {\n  try {\n    const el = getMessageContainer();\n    if (!el) throw new Error('Message container not found');\n    el.innerHTML = iconHtml + '<span class=\"msg-text\">' + el.textContent + '</span>';\n  } catch (e) {\n    console.warn('[messageDisplay] setMessageIcon error:', e);\n  }\n}\n\n// --- Utility: Announce Message for Screen Readers Only ---\nfunction announceMessageSR(message) {\n  try {\n    const el = getMessageContainer();\n    if (!el) throw new Error('Message container not found');\n    el.setAttribute('aria-live', 'assertive');\n    el.textContent = message;\n    setTimeout(() => el.setAttribute('aria-live', 'polite'), 1000);\n  } catch (e) {\n    console.warn('[messageDisplay] announceMessageSR error:', e);\n  }\n}\n\n// --- Debug: Expose more utilities ---\nwindow.messageDisplayDebug = {\n  ...window.messageDisplayDebug,\n  queueMessage,\n  showPersistentMessage,\n  flashMessage,\n  getMessageHistory,\n  clearAllMessages,\n  setMessageStyle,\n  setMessageIcon,\n  announceMessageSR,\n  messageQueue,\n  messageHistory\n};\n\n// --- UI Integration: Expose messageDisplay API for other UI modules ---\nwindow.messageDisplayUI = {\n  showMessage,\n  hideMessage,\n  setCritical,\n  isVisible,\n  queueMessage,\n  dispatchMessageEvent,\n  onMessageEvent,\n  offMessageEvent\n};\n\n// --- Hide message display except in MENU or END ---\nonScreenStateChange(state => {\n  const msgEl = document.getElementById('messageDisplay');\n  if (!msgEl) return;\n  if (state === 'MENU' || state === 'END') {\n    msgEl.style.display = 'block';\n  } else {\n    msgEl.style.display = 'none';\n  }\n});\n\n// --- Exported API ---\nexport {\n  showMessage,\n  hideMessage,\n  setCritical,\n  isVisible,\n  onMessageEvent,\n  offMessageEvent,\n  dispatchMessageEvent,\n  queueMessage,\n  showPersistentMessage,\n  flashMessage,\n  getMessageHistory,\n  clearAllMessages,\n  setMessageStyle,\n  setMessageIcon,\n  announceMessageSR\n};","// filepath: src/ui/debugPanel.js\r\n// debugPanel.js - Simple debug overlay for event logs and diagnostics\r\nimport { eventManager } from '../game/eventManager.js';\r\n\r\nlet panel, list;\r\n\r\nfunction initDebugPanel() {\r\n  panel = document.createElement('div');\r\n  panel.id = 'debugPanel';\r\n  // Inline styles for debug panel\r\n  Object.assign(panel.style, {\r\n    position: 'absolute',\r\n    bottom: '0',\r\n    left: '0',\r\n    width: '320px',\r\n    maxHeight: '40%',\r\n    background: 'rgba(0,0,0,0.8)',\r\n    color: '#0f0',\r\n    fontFamily: 'monospace',\r\n    fontSize: '12px',\r\n    overflowY: 'auto',\r\n    padding: '4px',\r\n    zIndex: '10000',\r\n    display: 'none'\r\n  });\r\n  document.body.appendChild(panel);\r\n  list = document.createElement('ul');\r\n  list.style.margin = 0;\r\n  list.style.padding = '0 4px';\r\n  list.style.listStyle = 'none';\r\n  panel.appendChild(list);\r\n\r\n  // Toggle debug panel with backtick (`) key\r\n  window.addEventListener('keydown', e => {\r\n    if (e.key === '`') {\r\n      panel.style.display = panel.style.display === 'none' ? 'block' : 'none';\r\n      eventManager.enableDebug();\r\n    }\r\n  });\r\n\r\n  // Subscribe to selected events\r\n  eventManager.subscribe('frame', ({ delta }) => {\r\n    addLog(`[FRAME] Δ=${delta.toFixed(2)}ms`);\r\n  });\r\n  eventManager.subscribe('diagnostic', ({ event, data }) => {\r\n    addLog(`[DIAG] ${event}`);\r\n  });\r\n  eventManager.subscribe('playerHit', ({ defender, attacker }) => {\r\n    addLog(`[HIT] P${attacker.playerIndex+1} -> P${defender.playerIndex+1}`);\r\n  });\r\n}\r\n\r\nfunction addLog(text) {\r\n  if (!list) return;\r\n  const li = document.createElement('li');\r\n  li.textContent = text;\r\n  list.appendChild(li);\r\n  // Limit log entries\r\n  if (list.childElementCount > 100) {\r\n    list.removeChild(list.firstChild);\r\n  }\r\n  panel.scrollTop = panel.scrollHeight;\r\n}\r\n\r\n// Initialize on load\r\ninitDebugPanel();\r\n","import { gameContext, registerSystem, logDiagnostic } from './gameContext.js';\nimport { eventManager } from './eventManager.js';\nimport { updateAllAIControllers } from './ai.js';\nimport { updateAllObstacles, drawAllObstacles } from './obstacles.js';\nimport { updateAllPowerUps, drawAllPowerUps } from './powerups.js';\nimport { updateAllHitSparks, drawAllHitSparks } from './hitSparks.js';\nimport { updateAllStickmen, getAllStickmen } from './stickman.js';\nimport { getScreenState } from '../ui/screenManager.js';\nimport { saveGameState, loadGameState } from './saveManager.js';\n\n// Register core systems in the shared context for cross-module access\nregisterSystem('eventManager', eventManager);\nregisterSystem('aiControllers', gameContext.aiControllers);\nregisterSystem('obstacles', gameContext.obstacles);\nregisterSystem('powerups', gameContext.powerups);\nregisterSystem('hitSparks', gameContext.hitSparks);\n// Register other systems as needed\n\n// Unified, extensible game loop with event and debug/diagnostic hooks\nlet _gameOverTriggered = false;\n\n// Helper: debug log for game loop\nfunction logGameLoopDebug(delta) {\n  if (eventManager.debugMode) console.debug('[gameLoop] integratedGameLoop called, delta:', delta);\n}\n\nexport function integratedGameLoop(delta, contextOverrides = {}) {\n  // Only run game logic if in PLAYING state\n  if (getScreenState && getScreenState() !== 'PLAYING') return;\n  // Guard against negative or zero delta\n  if (typeof delta !== 'number' || delta <= 0) return;\n\n  // Debug hook\n  logGameLoopDebug(delta);\n  // Merge context for this frame\n  const context = { ...gameContext, ...contextOverrides };\n  // Include delta time for systems that need it\n  context.delta = delta;\n\n  // Reset game over flag when menu is shown (new game)\n  if (context.menuState === 'MENU' || context.menuState === 'END') {\n    _gameOverTriggered = false;\n  }\n  // Update all systems\n  updateAllAIControllers?.(delta, context);\n  updateAllObstacles?.(delta, context);\n  updateAllStickmen?.(delta, context);\n  updateAllPowerUps?.(delta, context);\n  updateAllHitSparks?.(delta, context);\n  // Check for game over\n  if (! _gameOverTriggered && Array.isArray(context.players) && context.players.length >= 2) {\n    const [p1, p2] = context.players;\n    if (p1.health <= 0 || p2.health <= 0) {\n      _gameOverTriggered = true;\n      const winner = p1.health > p2.health ? p1 : p2;\n      const loser  = winner === p1 ? p2 : p1;\n      eventManager.dispatchEvent('playerDefeated', { winner, loser });\n      eventManager.dispatchEvent('gameOver', { winner, loser });\n      // Notify end of fight for UI cleanup\n      eventManager.dispatchEvent('fightEnd', { winner, loser });\n    }\n  }\n  // Render all layers in order: obstacles, stickmen, hitSparks, powerups\n  if (context.ctx) {\n    drawAllObstacles(context.ctx);\n    // Draw all stickman instances\n    getAllStickmen().forEach(stickman => {\n      try { stickman.draw(context.ctx); }\n      catch (e) { console.error('[gameLoop] Error drawing stickman:', e); }\n    });\n    drawAllHitSparks(context.ctx);\n    drawAllPowerUps(context.ctx);\n  }\n  // Diagnostics/analytics hook\n  logDiagnostic('frame', { time: Date.now(), context });\n  // Broadcast frame event for plugins/analytics/debug tools\n  eventManager?.dispatchEvent('frame', { delta, context });\n}\n\n// Debug framework: listen for debug events and log them\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('diagnostic', ({ event, data }) => {\n    // You can enhance this to route to a debug UI, overlay, or remote logger\n    if (window?.DEBUG_MODE) {\n      console.debug(`[DIAGNOSTIC] ${event}:`, data);\n    }\n  });\n  eventManager.subscribe('frame', ({ delta, context }) => {\n    if (window?.DEBUG_MODE && window?.DEBUG_FRAME_LOG) {\n      console.debug(`[FRAME] delta=${delta}`, context);\n    }\n  });\n}\n\n// --- Advanced Integration Opportunities ---\n// 1. UI and Game State Synchronization\nimport { updateHealthBar } from '../ui/healthBar.js';\nimport { showMessage } from '../ui/messageDisplay.js';\nimport { updateMenuState } from '../ui/menu.js';\n\n// Listen for game events and update UI modules accordingly\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  // Health bar updates\n  eventManager.subscribe('playerHit', ({ defender }) => {\n    updateHealthBar(defender);\n  });\n  eventManager.subscribe('playerHealed', ({ player }) => {\n    updateHealthBar(player);\n  });\n  // Show messages for key events\n  eventManager.subscribe('powerupCollected', ({ player, powerup }) => {\n    showMessage(`${player.name || 'Player'} collected a ${powerup.type} powerup!`);\n  });\n  eventManager.subscribe('playerDefeated', ({ winner, loser }) => {\n    showMessage(`${winner} defeated ${loser}!`);\n    updateMenuState('end');\n  });\n  // Menu state for pause/resume\n  eventManager.subscribe('pause', () => updateMenuState('pause'));\n  eventManager.subscribe('resume', () => updateMenuState('resume'));\n}\n\n// 2. Dynamic Difficulty and Adaptive AI\nimport * as aiModule from './ai.js';\n// Example: Adjust AI difficulty based on analytics\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('comboAchieved', ({ player, comboCount }) => {\n    if (comboCount > 3) {\n      for (const ai of aiModule.aiControllers) {\n        ai.setBehavior('aggressive');\n      }\n    }\n  });\n  eventManager.subscribe('playerStreak', ({ player, streak }) => {\n    if (streak > 2) {\n      for (const ai of aiModule.aiControllers) {\n        ai.setBehavior('defensive');\n      }\n    }\n  });\n}\n\n// 3. Centralized Settings Propagation\nimport { applySettings } from '../ui/controlsInfo.js';\nif (eventManager && typeof eventManager.subscribe === 'function') {\n  eventManager.subscribe('settingsChanged', ({ settings }) => {\n    applySettings(settings);\n    // Propagate to other systems as needed\n  });\n}\n\n// Persist game state on request\neventManager.subscribe('saveGame', () => {\n  const players = getAllStickmen().map((s, i) => ({ index: i, x: s.x, y: s.y, health: s.health, facingRight: s.facingRight }));\n  saveGameState({ players });\n});\n// Load game state on request\neventManager.subscribe('loadGame', () => {\n  const state = loadGameState();\n  if (state && Array.isArray(state.players)) {\n    state.players.forEach(p => eventManager.dispatchEvent('loadPlayerState', p));\n  }\n});\n// Auto-save on pause and end of fight\neventManager.subscribe('pause', () => eventManager.dispatchEvent('saveGame'));\neventManager.subscribe('fightEnd', () => eventManager.dispatchEvent('saveGame'));\n// Optionally auto-load at startup\neventManager.dispatchEvent('loadGame', {});","// index.js - Modern entry point for Stick Fighter UI/game integration\n// Loads and wires up all modular UI and game systems\n\nimport '../src/ui/controlsInfo.js';\nimport '../src/ui/healthBar.js';\nimport '../src/ui/menu.js';\nimport '../src/ui/messageDisplay.js';\nimport './ui/debugPanel.js';\nimport { integratedGameLoop } from './game/gameLoop.js';\nimport '../src/game/ai.js';\nimport '../src/game/controls.js';\nimport { eventManager } from './game/eventManager.js';\nimport '../src/game/hitSparks.js';\nimport '../src/game/obstacles.js';\nimport '../src/game/powerups.js';\nimport { Stickman } from './game/stickman.js';\nimport { gameContext } from './game/gameContext.js';\nimport { onScreenStateChange, updateScreenOverlays, setScreenState } from './ui/screenManager.js';\n\n// Expose the central event manager globally for UI scripts\nwindow.eventManager = eventManager;\n\n// --- UI/DOM Bootstrapping with Error Handling, Event Management, and Debugging ---\nwindow.addEventListener('DOMContentLoaded', () => {\n  console.log('[StickFighter] Page loaded - JS bundle is running.');\n  try {\n    let paused = false;\n    setScreenState('MENU');\n    updateScreenOverlays();\n    onScreenStateChange(updateScreenOverlays);\n    eventManager.subscribe('showMenu', ({ state }) => setScreenState(state || 'MENU'));\n    // Step 4: On Start Game button click (menuStart), call setScreenState('PLAYING') before starting the game loop\n    eventManager.subscribe('menuStart', () => {\n      setScreenState('PLAYING');\n      window.menuUI?.hideMenu();\n      gameContext.players.length = 0;\n      const canvas = document.getElementById('gameCanvas');\n      // Create two stickman instances and set playerIndex\n      const p1 = new Stickman(100, canvas.height - 50, {}, true, null, false);\n      p1.playerIndex = 0;\n      const p2 = new Stickman(canvas.width - 100, canvas.height - 50, {}, false, null, false);\n      p2.playerIndex = 1;\n      gameContext.players.push(p1, p2);\n      eventManager.dispatchEvent('fightStart', { players: gameContext.players });\n      let lastTime = performance.now();\n      function frame(time) {\n        const delta = time - lastTime;\n        lastTime = time;\n        if (canvas) {\n          const ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.fillStyle = '#111';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          if (!paused) {\n            integratedGameLoop(delta, { ctx, canvasHeight: canvas.height });\n          }\n        }\n        requestAnimationFrame(frame);\n      }\n      requestAnimationFrame(frame);\n    });\n    // Step 5: On 'pause', call setScreenState('PAUSED')\n    eventManager.subscribe('pause', () => { paused = true; setScreenState('PAUSED'); });\n    // Step 6: On 'resume', call setScreenState('PLAYING')\n    eventManager.subscribe('resume', () => { paused = false; setScreenState('PLAYING'); });\n    // Step 7: On 'gameOver', call setScreenState('END')\n    eventManager.subscribe('gameOver', () => setScreenState('END'));\n    // Step 8: On 'fightStart', call setScreenState('PLAYING')\n    eventManager.subscribe('fightStart', () => setScreenState('PLAYING'));\n    // Step 9: On 'fightEnd', call setScreenState('END')\n    eventManager.subscribe('fightEnd', () => setScreenState('END'));\n    // Step 10: On 'menuMainMenu', call setScreenState('MENU')\n    eventManager.subscribe('menuMainMenu', () => setScreenState('MENU'));\n    // Step 11: On settings menu open, call setScreenState('SETTINGS_MENU')\n    eventManager.subscribe('settingsMenu', () => setScreenState('SETTINGS_MENU'));\n    // Step 12: ESC key handler toggles PAUSED/PLAYING using setScreenState\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        if (!paused) {\n          eventManager.dispatchEvent('pause');\n          setScreenState('PAUSED');\n          window.menuUI?.updateMenuState('PAUSED');\n        } else {\n          eventManager.dispatchEvent('resume');\n          setScreenState('PLAYING');\n          window.menuUI?.hideMenu();\n        }\n        paused = !paused;\n      }\n    });\n    window.healthBarUI?.renderHealthBars();\n    window.controlsInfoUI?.renderControlsInfo();\n    // Initial main menu render\n    window.menuUI?.renderMenu();\n    // Optionally show main menu or intro message\n    window.messageDisplayUI?.showMessage('Welcome to Stick Fighter!');\n    // Wire up reset button for parity with index.html\n    const resetBtn = document.getElementById('resetButton');\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => {\n        try {\n          // Notify menu system to return to main menu\n          eventManager.dispatchEvent('menuMainMenu', {});\n          window.menuUI?.updateMenuState('MENU');\n          window.healthBarUI?.hideHealthBars();\n          window.messageDisplayUI?.hideMessage();\n          const pauseMenu = document.getElementById('pauseMenuTitle');\n          if (pauseMenu) pauseMenu.style.display = 'none';\n          const settingsMenu = document.getElementById('settingsMenuTitle');\n          if (settingsMenu) settingsMenu.style.display = 'none';\n        } catch (e) {\n          console.warn('[index.js] Error in resetButton handler:', e);\n        }\n      });\n    }\n    // Update health bars dynamically each frame\n    eventManager.subscribe('frame', ({ context }) => {\n      if (window.healthBarUI && Array.isArray(context.players)) {\n        context.players.forEach(player => {\n          try { window.healthBarUI.updateHealthBar(player); }\n          catch (e) { console.error('[index.js] Error updating health bar on frame:', e); }\n        });\n      }\n    });\n    // Step 3: On 'showMenu', call setScreenState(state) to ensure all menu transitions are routed through the manager\n    eventManager.subscribe('showMenu', ({ state }) => setScreenState(state || 'MENU'));\n    // Debug: Log successful boot\n    if (window?.DEBUG_MODE) console.debug('[index.js] UI/game bootstrapped successfully');\n    // Event: Custom event for app ready\n    const appReadyEvent = new CustomEvent('stickFighterAppReady', { detail: { modules: window.stickFighterDebug } });\n    window.dispatchEvent(appReadyEvent);\n  } catch (e) {\n    console.error('[index.js] Error during UI/game bootstrapping:', e);\n    window.messageDisplayUI?.showMessage('Critical error during startup. See console for details.', { critical: true, duration: 0 });\n  }\n});\n\n// --- Debug: Expose all UI modules for console inspection and add event hooks ---\nwindow.stickFighterDebug = {\n  menu: window.menuUI,\n  healthBar: window.healthBarUI,\n  controlsInfo: window.controlsInfoUI,\n  messageDisplay: window.messageDisplayUI,\n  onAppReady: (cb) => window.addEventListener('stickFighterAppReady', cb),\n  triggerError: (msg = 'Manual test error') => { throw new Error(msg); }\n};\n\n// --- Global error handler for debugging ---\nwindow.addEventListener('error', (e) => {\n  console.error('[Global Error]', e.message, e.error);\n  window.messageDisplayUI?.showMessage('A global error occurred. See console for details.', { critical: true, duration: 0 });\n});\nwindow.addEventListener('unhandledrejection', (e) => {\n  console.error('[Global Unhandled Promise Rejection]', e.reason);\n  window.messageDisplayUI?.showMessage('A promise error occurred. See console for details.', { critical: true, duration: 0 });\n});"],"names":["container","tooltip","closeBtn","ACTION_LABELS","left","right","jump","punch","kick","guard","slam","airDodge","parry","run","turn","showTooltip","text","target","document","createElement","className","body","appendChild","textContent","classList","add","rect","getBoundingClientRect","width","top","bottom","tooltipRect","window","innerWidth","height","innerHeight","style","e","console","warn","hideTooltip","remove","handleKeyNav","keys","Array","from","querySelectorAll","current","activeElement","idx","indexOf","key","length","focus","preventDefault","hideControlsInfo","renderControlsInfo","domContainer","getElementById","setAttribute","position","opacity","transition","debug","bindings","getKeyBindings","player1","player2","innerHTML","Object","entries","map","action","replace","join","background","border","fontSize","cursor","color","addEventListener","forEach","btn","dataset","onkeydown","setTimeout","message","showControlsInfo","display","applySettings","settings","onScreenStateChange","state","controlsInfoEl","querySelector","eventManager","subscribe","controlsInfoUI","menuDebug","onMenuEvent","messageDisplayDebug","onMessageEvent","opts","toLowerCase","includes","PLAYER_IDS","HEALTH_BAR_IDS","HEALTH_LABELS","getHealthBarEl","playerIdx","getHealthBarContainer","getHealthPercent","player","health","maxHealth","Math","max","min","resetHealthBars","_","bar","logHealthBarState","undefined","playerIndex","id","percent","toFixed","ensureHealthBarDOM","error","updateHealthBar","round","_lastHealth","showHealthBars","hideHealthBars","showScorePopup","value","type","popup","setWinnerLoserEffect","winnerIdx","loserIdx","el","clearWinnerLoserEffect","updateRoundTimerBar","timerBar","visuallyHide","visuallyShow","renderHealthBars","players","healthBarEventListeners","onHealthBarEvent","eventType","listener","push","offHealthBarEvent","filter","l","dispatchHealthBarEvent","detail","fireHealthBarEvent","DEBUG_MODE","healthBarDebug","defender","winner","loser","healthBarUI","MENU_STATES","currentMenuState","MENU_BUTTONS","MENU","hoverColor","textColor","MODE_SELECT","DIFFICULTY_SELECT","PAUSED","SETTINGS_MENU","END","overlay","getMenuOverlay","createMenuOverlay","isValidMenuState","isValidMenuEventType","menuEventListeners","updateMenuState","renderMenu","clearMenuOverlay","buttons","title","getMenuTitle","h2","isValidMenuButtonDef","button","onClick","createMenuButton","logMenuEvent","handleMenuAction","animateMenuIn","focusFirstMenuButton","removeEventListener","_menuTooltipEnter","_menuTooltipLeave","removeAttribute","addMenuButtonTooltips","clearMenuEventListeners","clearAllMenuEventListeners","evt","event","hideMenu","offMenuEvent","dispatchMenuEvent","dispatchEvent","fireMenuEvent","onceMenuEvent","wrapper","menuEventQueue","queueMenuEvent","processMenuEventQueue","shift","mode","difficulty","gravity","subscribeMenuDebugEvents","focusable","e2","getState","getOverlay","showMenu","menuUI","hideTimeout","getMessageContainer","hideMessage","showMessage","trim","Error","clearTimeout","critical","messageHistory","timestamp","Date","now","duration","onHide","origHide","fireMessageEvent","isVisible","logMessageEvent","powerup","name","data","messageEventListeners","messageQueue","isMessageActive","queueMessage","processMessageQueue","showPersistentMessage","lastPersistentMessage","panel","list","addLog","li","childElementCount","removeChild","firstChild","scrollTop","scrollHeight","flashMessage","getMessageHistory","clearAllMessages","setMessageStyle","styleObj","k","v","setMessageIcon","iconHtml","announceMessageSR","messageDisplayUI","setCritical","isCritical","dispatchMessageEvent","offMessageEvent","msgEl","assign","maxHeight","fontFamily","overflowY","padding","zIndex","margin","listStyle","enableDebug","delta","attacker","registerSystem","gameContext","aiControllers","obstacles","powerups","hitSparks","_gameOverTriggered","integratedGameLoop","contextOverrides","getScreenState","debugMode","logGameLoopDebug","context","menuState","updateAllAIControllers","updateAllObstacles","updateAllStickmen","updateAllPowerUps","updateAllHitSparks","isArray","p1","p2","ctx","drawAllObstacles","getAllStickmen","stickman","draw","drawAllHitSparks","drawAllPowerUps","logDiagnostic","time","DEBUG_FRAME_LOG","comboCount","ai","aiModule.aiControllers","setBehavior","streak","s","i","index","x","y","facingRight","saveGameState","loadGameState","p","log","paused","setScreenState","updateScreenOverlays","canvas","Stickman","lastTime","performance","requestAnimationFrame","frame","getContext","clearRect","fillStyle","fillRect","canvasHeight","resetBtn","pauseMenu","settingsMenu","appReadyEvent","CustomEvent","modules","stickFighterDebug","menu","healthBar","controlsInfo","messageDisplay","onAppReady","cb","triggerError","msg","reason"],"mappings":"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"}